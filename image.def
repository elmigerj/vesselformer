Bootstrap: docker
From: nvidia/cuda:11.3.1-devel-ubuntu20.04

%post
    # Set timezone and locale
    TZ=Europe/Berlin
    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
    echo "LC_ALL=en_US.UTF-8" >> /etc/environment

    # Update and install system packages
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y \
        libgsl-dev \
        python3-opencv \
        ffmpeg \
        libsm6 \
        libxext6 \
        libboost-all-dev \
        vim \
        software-properties-common \
        python3-pip \
        python3-setuptools \
        python3-tk \
        wget \
        ninja-build \
        git 

    # Add PPA to install Python 3.7 and g++-11
    add-apt-repository ppa:deadsnakes/ppa -y
    add-apt-repository ppa:ubuntu-toolchain-r/test -y
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y python3.7 python3.7-venv python3.7-dev g++-11

    # Find the path to Python 3.7 and set it as the default python3
    PYTHON37_PATH=$(which python3.7)
    if [ -z "$PYTHON37_PATH" ]; then
        echo "Python 3.7 not found"
        exit 1
    fi
    update-alternatives --install /usr/bin/python3 python3 $PYTHON37_PATH 1
    update-alternatives --set python3 $PYTHON37_PATH

    # Ensure pip is installed for Python 3.7
    python3.7 -m ensurepip
    python3.7 -m pip install --upgrade pip

    # Install PyTorch and other required packages
    python3.7 -m pip install torch>=2.0 torchvision torchaudio --index-url https://download.pytorch.org/whl/cu113
    export SKLEARN_ALLOW_DEPRECATED_SKLEARN_PACKAGE_INSTALL=True
    python3.7 -m pip install \
        loguru==0.5.3 \
        numpy==1.19.5 \
        sknw==0.14 \
        scikit_image==0.17.2 \
        monai==0.7.0 \
        matplotlib==3.2.1 \
        vtk==9.0.3 \
        pyvista==0.33.2 \
        scipy==1.5.4 \
        open3d==0.11.2 \
        MedPy==0.4.0 \
        timm==0.4.12 \
        tqdm==4.62.3 \
        ignite==1.1.0 \
        einops==0.3.2 \
        PyYAML==6.0 \
        pytorch-ignite==0.4.9 \
        tensorboard \
        openmim
    
    #mmcv_full==1.3.15 \        
    #mmcv==1.6.0 \

    mim install mmcv==1.6.0
    mim install mmcv_full==1.3.15

    # Clone the vesselformer repository (if not already present)
    if [ ! -d "/vesselformer" ]; then
        git clone https://github.com/elmigerj/vesselformer /vesselformer
    fi

    # Install MultiScaleDeformableAttention
    cd /vesselformer/models/ops
    python3 setup.py build install

    # Add a script to determine CUDA visible devices and run training
    cat << EOF > /usr/local/bin/run_training.sh
#!/bin/bash
CUDA_DEVICES=$(nvidia-smi --query-gpu=index --format=csv,noheader | tr '\n' ',' | sed 's/,$//')
NUM_DEVICES=$(echo \$CUDA_DEVICES | tr ',' '\n' | wc -l)

python3 /vesselformer/train.py \
    --config configs/synth_3D.yaml \
    --cuda_visible_device \$CUDA_DEVICES \
    --nproc_per_node \$NUM_DEVICES
EOF

    chmod +x /usr/local/bin/run_training.sh

    # Clean up
    apt-get clean
    rm -rf /var/lib/apt/lists/*

%environment
    export CUDA_HOME="/usr/local/cuda"
    export LC_ALL=C
    export PYTHONPATH=/vesselformer:$PYTHONPATH
    export SKLEARN_ALLOW_DEPRECATED_SKLEARN_PACKAGE_INSTALL=True

%runscript
    /usr/local/bin/run_training.sh